name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: ["5432:5432"]
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_PASSWORD: ""
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.2
          bundler-cache: true
      - name: Preparing database
        run: bundle exec rails db:setup db:migrate

      - name: Run tests
        run: bundle exec rspec

  push_to_registry:
    needs: test
    name: Push Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      REGISTRY: ghcr.io
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Docker login
        uses: docker/login-action@v3
        with:
          login-server:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/dthtien/deal-hub-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: service=deals-hub-be

  deploy:
    needs: push_to_registry
    name: Kamal deploy
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.1

      - name: Install dependencies
        run: gem install kamal -v 2.1.0

      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Save environment variables to .kamal/secrets
        run: |
          cat > .kamal/secrets <<EOL
          RAILS_ENV=production
          RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}
          REGISTRY_PASSWORD=${{ secrets.GITHUB_TOKEN }}
          DEAL_HUB_API_DATABASE_HOST=${{ secrets.DATABASE_HOST }}
          DEAL_HUB_API_DATABASE_NAME=${{ secrets.DATABASE_NAME }}
          DEAL_HUB_API_DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
          DEAL_HUB_API_DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_USER=${{ secrets.DATABASE_USERNAME }}
          POSTGRES_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB=${{ secrets.DATABASE_NAME }}
          SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }}
          APP_URL=${{ secrets.APP_URL }}
          FB_PAGE_ID=${{ secrets.FB_PAGE_ID }}
          FB_USER_TOKEN=${{ secrets.FB_USER_TOKEN }}
          PROPERTY_COM_COOKIE=${{ secrets.PROPERTY_COM_COOKIE }}
          EOL

      - name: Run deploy command
        run: VERSION=latest kamal deploy --skip-push
